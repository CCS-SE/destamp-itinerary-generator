datasource db {
  url      = env("NEW_DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
  firstName String   @map("first_name") @db.VarChar(255)
  lastName  String   @map("last_name") @db.VarChar(255)
  type      UserType @default(TRAVELER)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  trips  Trip[]
  stamps Stamp[]
  pois   PointOfInterest[]

  @@map("users")
}

model Trip {
  id     Int    @id @default(autoincrement())
  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  title                    String     @db.VarChar(255)
  budget                   Float
  startingLocation         Json       @map("starting_location")
  travelSize               TravelSize @default(SOLO) @map("travel_size")
  travelerCount            Int        @map("traveler_count")
  startDate                DateTime   @map("start_date")
  endDate                  DateTime?  @map("end_date")
  isAccommodationIncluded  Boolean    @default(false) @map("is_accommodation_included")
  isFoodIncluded           Boolean    @default(false) @map("is_food_included")
  isTransportationIncluded Boolean    @default(false) @map("is_transportation_included")
  timeSlots                Json       @map("time_slots")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  expenses         Expense[]
  dailyItineraries DailyItinerary[]

  @@map("trips")
}

model PointOfInterest {
  id     String  @id @default(cuid())
  user   User?   @relation(fields: [userId], references: [id])
  userId String? @map("user_id")

  name          String  @db.VarChar(255)
  description   String?
  address       String  @db.VarChar(255)
  price         String  @db.VarChar(255)
  contactNumber String  @map("contact_number") @db.VarChar(255)
  latitude      Float
  longitude     Float
  visitDuration Float   @map("visit_duration")
  isAttraction  Boolean @default(true) @map("is_attraction")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  categories         Category[]
  operatingHours     OperatingHour[]
  poiImages          PoiImage[]
  dailyItineraryPois DailyItineraryPoi[]
  accommodation      Accommodation?
  restaurant         Restaurant?

  @@map("point_of_interests")
}

model Restaurant {
  id    Int             @id @default(autoincrement())
  poi   PointOfInterest @relation(fields: [poiId], references: [id])
  poiId String          @unique @map("poi_id")

  atmospheres String[] @db.VarChar(255)

  @@map("restaurants")
}

model Accommodation {
  id    Int             @id @default(autoincrement())
  poi   PointOfInterest @relation(fields: [poiId], references: [id])
  poiId String          @unique @map("poi_id")

  amenities Amenity[]

  @@map("accommodations")
}

model Amenity {
  id   Int    @id @default(autoincrement())
  name String @unique @db.VarChar(255)

  accommodations Accommodation[]

  @@map("amenities")
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @unique @db.VarChar(255)

  pois PointOfInterest[]

  @@map("categories")
}

model OperatingHour {
  id    Int             @id @default(autoincrement())
  poi   PointOfInterest @relation(fields: [poiId], references: [id])
  poiId String          @map("poi_id")

  day       Int
  openTime  DateTime? @map("open_time")
  closeTime DateTime? @map("close_time")
  isClosed  Boolean   @default(false) @map("is_closed")
  is24Hours Boolean   @default(false) @map("is_24_hours")

  @@map("operating_hours")
}

model DailyItinerary {
  id     Int  @id @default(autoincrement())
  trip   Trip @relation(fields: [tripId], references: [id])
  tripId Int  @map("trip_id")

  accommodationCost  Float  @map("accommodation_cost")
  attractionCost     Float  @map("attraction_cost")
  foodCost           String @map("food_cost") @db.VarChar(255)
  dayIndex           Int    @map("day_index")
  transportationCost Float  @map("transportation_cost")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  dailyItineraryPois DailyItineraryPoi[]

  @@map("daily_itineraries")
}

model DailyItineraryPoi {
  id               Int             @id @default(autoincrement())
  poi              PointOfInterest @relation(fields: [poiId], references: [id])
  dailyItinerary   DailyItinerary  @relation(fields: [dailyItineraryId], references: [id])
  poiId            String          @map("poi_id")
  dailyItineraryId Int             @map("daily_itinerary_id")

  order    Int
  duration Float
  distance Float

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("daily_itinerary_pois")
}

model Expense {
  id     Int  @id @default(autoincrement())
  trip   Trip @relation(fields: [tripId], references: [id])
  tripId Int  @map("trip_id")

  amount    Float
  dateSpent DateTime        @map("date_spent")
  category  ExpenseCategory @default(ACCOMMODATION)
  note      String          @default("") @db.VarChar(255)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("expenses")
}

model Image {
  id  String @id @default(cuid())
  url String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  stamp    Stamp?
  poiImage PoiImage?

  @@map("images")
}

model PoiImage {
  id      Int             @id @default(autoincrement())
  poi     PointOfInterest @relation(fields: [poiId], references: [id])
  poiId   String          @map("poi_id")
  image   Image           @relation(fields: [imageId], references: [id])
  imageId String          @unique @map("image_id")

  @@map("poi_images")
}

model Stamp {
  id      Int    @id @default(autoincrement())
  image   Image  @relation(fields: [imageId], references: [id])
  imageId String @unique @map("image_id")

  title         String   @db.VarChar(255)
  dateCollected DateTime @map("date_collected")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  users User[]

  @@map("stamps")
}

enum UserType {
  TRAVELER
  BUSINESS_OPERATOR

  @@map("user_type")
}

enum TravelSize {
  SOLO
  COUPLE
  GROUP
  FAMILY

  @@map("travel_size")
}

enum ExpenseCategory {
  ACCOMMODATION
  FOOD
  TRANSPORTATION
  SIGHTSEEING
  SHOPPING
  ACTIVITY
  OTHER

  @@map("expense_category")
}
